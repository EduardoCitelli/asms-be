// <auto-generated />
using System;
using ASMS.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASMS.Persistence.Migrations
{
    [DbContext(typeof(ASMSDbContext))]
    [Migration("20221129181728_MemberShipTypeHaveInstitute")]
    partial class MemberShipTypeHaveInstitute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASMS.Domain.Entities.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberMinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Coach", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdentificationNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Institute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdentificationNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AuxCoachId")
                        .HasColumnType("bigint");

                    b.Property<int>("ClassStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PrincipalCoachId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("AuxCoachId");

                    b.HasIndex("InstituteId");

                    b.HasIndex("PrincipalCoachId");

                    b.HasIndex("RoomId");

                    b.ToTable("InstituteClasses");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdentificationNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("InstitutesMembers");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberActivities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("InstituteMemberId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.ToTable("InstituteMemberActivities");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberInstituteClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteClassId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituteMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("InstituteMemberId", "InstituteClassId");

                    b.HasIndex("InstituteClassId");

                    b.ToTable("InstituteMemberInstituteClasses");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberMembership", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActiveMembership")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("InstituteMemberId", "MembershipId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("PaymentId");

                    b.ToTable("InstituteMemberMemberships");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CoachId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstituteMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("InstituteMemberId");

                    b.HasIndex("UserId");

                    b.ToTable("InstituteMemberNotes");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstitutePlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("date");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("InstituteId", "PlanId");

                    b.HasIndex("PlanId");

                    b.ToTable("InstitutePlans");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Membership", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MembershipTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("MembershipTypeId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.MembershipType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ClassQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsByQuantity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.NoteFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteMemberNoteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteMemberNoteId");

                    b.ToTable("NoteFiles");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(16, 3)
                        .HasColumnType("decimal(16,3)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AllowedUsers")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasOnlineClasses")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(16, 3)
                        .HasColumnType("decimal(16,3)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(4940),
                            Description = "Super usuario con acceso a todos los modulos del sistema",
                            IsDelete = false,
                            LastEditedBy = "admin",
                            Name = "SuperAdmin",
                            UpdatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(4941)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5029),
                            Description = "Manager de la institución",
                            IsDelete = false,
                            LastEditedBy = "admin",
                            Name = "Manager",
                            UpdatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5029)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5032),
                            Description = "Miembro administrativo de la institución",
                            IsDelete = false,
                            LastEditedBy = "admin",
                            Name = "StaffMember",
                            UpdatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5032)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5034),
                            Description = "Profesor de la institución",
                            IsDelete = false,
                            LastEditedBy = "admin",
                            Name = "Coach",
                            UpdatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5035)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5037),
                            Description = "Miembro/Cliente de la institución",
                            IsDelete = false,
                            LastEditedBy = "admin",
                            Name = "Member",
                            UpdatedAt = new DateTime(2022, 11, 29, 18, 17, 28, 485, DateTimeKind.Utc).AddTicks(5037)
                        });
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MembersCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.StaffMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdentificationNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Activity", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("Activities")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Coach", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("Coaches")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("ASMS.Domain.Entities.Coach", "UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Institute", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("ASMS.Domain.Entities.Institute", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteClass", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Coach", "AuxCoach")
                        .WithMany("AuxClasses")
                        .HasForeignKey("AuxCoachId");

                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("InstituteClasses")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Coach", "PrincipalCoach")
                        .WithMany("PrincipalClasses")
                        .HasForeignKey("PrincipalCoachId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("AuxCoach");

                    b.Navigation("Institute");

                    b.Navigation("PrincipalCoach");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMember", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("InstituteMembers")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("ASMS.Domain.Entities.InstituteMember", "UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberActivities", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.InstituteMember", "InstituteMember")
                        .WithMany("AllowedActivities")
                        .HasForeignKey("InstituteMemberId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("InstituteMember");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberInstituteClass", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.InstituteClass", "InstituteClass")
                        .WithMany("InstituteMembers")
                        .HasForeignKey("InstituteClassId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.InstituteMember", "InstituteMember")
                        .WithMany("Classes")
                        .HasForeignKey("InstituteMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituteClass");

                    b.Navigation("InstituteMember");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberMembership", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.InstituteMember", "InstituteMember")
                        .WithMany("Memberships")
                        .HasForeignKey("InstituteMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Payment", "Payment")
                        .WithMany("PaidMembership")
                        .HasForeignKey("PaymentId");

                    b.Navigation("InstituteMember");

                    b.Navigation("Membership");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberNote", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.InstituteMember", "InstituteMember")
                        .WithMany("Notes")
                        .HasForeignKey("InstituteMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.User", null)
                        .WithMany("Notes")
                        .HasForeignKey("UserId");

                    b.Navigation("Coach");

                    b.Navigation("InstituteMember");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstitutePlan", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("InstitutePlans")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Membership", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("Memberships")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.MembershipType", "MembershipType")
                        .WithMany("Memberships")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.MembershipType", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("MembershipTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.NoteFile", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.InstituteMemberNote", "InstituteMemberNote")
                        .WithMany("NoteFiles")
                        .HasForeignKey("InstituteMemberNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituteMemberNote");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("Payments")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Room", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("Rooms")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.StaffMember", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Institute", "Institute")
                        .WithMany("StaffMembers")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("ASMS.Domain.Entities.StaffMember", "UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("ASMS.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASMS.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Coach", b =>
                {
                    b.Navigation("AuxClasses");

                    b.Navigation("PrincipalClasses");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Institute", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Coaches");

                    b.Navigation("InstituteClasses");

                    b.Navigation("InstituteMembers");

                    b.Navigation("InstitutePlans");

                    b.Navigation("MembershipTypes");

                    b.Navigation("Memberships");

                    b.Navigation("Payments");

                    b.Navigation("Rooms");

                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteClass", b =>
                {
                    b.Navigation("InstituteMembers");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMember", b =>
                {
                    b.Navigation("AllowedActivities");

                    b.Navigation("Classes");

                    b.Navigation("Memberships");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.InstituteMemberNote", b =>
                {
                    b.Navigation("NoteFiles");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.MembershipType", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Payment", b =>
                {
                    b.Navigation("PaidMembership");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ASMS.Domain.Entities.User", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
